---
name: checks & builds the plugin

permissions:
  contents: write
  checks: write
  id-token: write

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - 'doc/**'
      - '*.md'
      - '*.adoc'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run tests
        run: ./gradlew check

      - name: Create Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          check_name: Test Report
          report_paths: '**/build/test-results/test/TEST-*.xml'
          detailed_summary: true
          include_passed: true

      - name: Build Plugin
        run: ./gradlew buildPlugin

      - name: read pluginVersion from build.gradle
        uses: christian-draeger/read-properties@1.1.1
        id: read_plugin_version
        with:
          path: './gradle.properties'
          properties: 'pluginVersion'

      - name: Upload Plugin Artefact
        uses: actions/upload-artifact@v4
        with:
          name: distribution
          path: './build/distributions/kotlinx.html-plugin-${{ steps.read_plugin_version.outputs.pluginVersion }}.zip'

  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: deployment-to-jetbrains-marketplace
      cancel-in-progress: true
    environment: JETBRAINS_MARKETPLACE
    env:
      PUBLISH_TOKEN: ${{ secrets.JETBRAINS_MARKETPLACE_TOKEN }}
    needs: build
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4

      - name: Download Plugin Artifact
        uses: actions/download-artifact@v4
        with:
          name: distribution
          path: .

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: deploy to Jetbrains marketplace without rebuilding zip file
        run: ./gradlew --info -DPUBLISH_TOKEN=${{ env.PUBLISH_TOKEN }} :publishPlugin --exclude-task :signPlugin --exclude-task :buildPlugin --exclude-task :check --exclude-task :patchChangelog

      - name: read pluginVersion from build.gradle
        uses: christian-draeger/read-properties@1.1.1
        id: read_plugin_version
        with:
          path: './gradle.properties'
          properties: 'pluginVersion'

      - name: Create tag
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/v${{ steps.read_plugin_version.outputs.pluginVersion }}',
              sha: context.sha
            })        


